import{_ as s,c as a,o as p,ag as e}from"./chunks/framework.ifgpkas4.js";const u=JSON.parse('{"title":"Template File","description":"","frontmatter":{},"headers":[],"relativePath":"en/overview/temp.md","filePath":"en/overview/temp.md"}'),l={name:"en/overview/temp.md"};function i(t,n,o,c,d,r){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="template-file" tabindex="-1">Template File <a class="header-anchor" href="#template-file" aria-label="Permalink to &quot;Template File&quot;">â€‹</a></h1><p>The template file is used to pass to <code>raina-schematic</code> in the form of <code>./raina-schematic -f filePath</code>.</p><p>The content of the template file is to fill in the <code>NodeProto</code>, <code>Node</code>, <code>Port</code>, and <code>Edge</code> data required by the program. For the definition of these data, please refer to the <a href="./data.html">[Core Data]</a> section.</p><p>The format of the template file is as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#       id      displayname         width   height</span></span>
<span class="line"><span>### Fill in NodeProto data here, separated by spaces, the following is a sample line</span></span>
<span class="line"><span>proto    6    /WORK/GcdUnitDpathRTL_0x4d0fc71ead8d3d9e/a_mux    80    60</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#       id      proto   name </span></span>
<span class="line"><span>### Fill in Port data here, separated by spaces, the following is a sample line</span></span>
<span class="line"><span>port    0    6    out    out</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#       id      proto   name   type</span></span>
<span class="line"><span>### Fill in Node data here, separated by spaces, the following is a sample line</span></span>
<span class="line"><span>node    0    6    b_zero    default</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#       outnode outpin  innode  inpin  name</span></span>
<span class="line"><span>### Fill in Edge data here, separated by spaces, the following is a sample line</span></span>
<span class="line"><span>edge    0    0    10    28 is_b_zero</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>The dependencies between the data mainly rely on the id field for association, so the id must be unique within each data type.</p></div><p>Below is a demo of a template file that can be used in practice:</p><details class="details custom-block"><summary>demo</summary><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#       id      displayname         width   height</span></span>
<span class="line"><span>proto    0    /WORK/GcdUnitDpathRTL_0x4d0fc71ead8d3d9e/b_zero    80    24</span></span>
<span class="line"><span>proto    1    /WORK/GcdUnitDpathRTL_0x4d0fc71ead8d3d9e/a_reg    80    48</span></span>
<span class="line"><span>proto    2    /WORK/GcdUnitDpathRTL_0x4d0fc71ead8d3d9e/a_lt_b    80    36</span></span>
<span class="line"><span>proto    3    /WORK/GcdUnitDpathRTL_0x4d0fc71ead8d3d9e/sub    80    36</span></span>
<span class="line"><span>proto    4    /WORK/GcdUnitDpathRTL_0x4d0fc71ead8d3d9e/b_mux    80    48</span></span>
<span class="line"><span>proto    5    /WORK/GcdUnitDpathRTL_0x4d0fc71ead8d3d9e/b_reg    80    48</span></span>
<span class="line"><span>proto    6    /WORK/GcdUnitDpathRTL_0x4d0fc71ead8d3d9e/a_mux    80    60</span></span>
<span class="line"><span>proto    7    is_a_lt_b    1    1</span></span>
<span class="line"><span>proto    8    b_reg_en    1    1</span></span>
<span class="line"><span>proto    9    b_mux_sel    1    1</span></span>
<span class="line"><span>proto    10    is_b_zero    1    1</span></span>
<span class="line"><span>proto    11    a_mux_sel    1    1</span></span>
<span class="line"><span>proto    12    clk    1    1</span></span>
<span class="line"><span>proto    13    resp_msg    1    1</span></span>
<span class="line"><span>proto    14    req_msg_b    1    1</span></span>
<span class="line"><span>proto    15    req_msg_a    1    1</span></span>
<span class="line"><span>proto    16    a_reg_en    1    1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#       id      proto   name</span></span>
<span class="line"><span>port    0    0    out    out</span></span>
<span class="line"><span>port    1    0    in_    in</span></span>
<span class="line"><span>port    2    1    clk    in</span></span>
<span class="line"><span>port    3    1    out    out</span></span>
<span class="line"><span>port    4    1    en    in</span></span>
<span class="line"><span>port    5    1    in_    in</span></span>
<span class="line"><span>port    6    2    out    out</span></span>
<span class="line"><span>port    7    2    in1    in</span></span>
<span class="line"><span>port    8    2    in0    in</span></span>
<span class="line"><span>port    9    3    in1    in</span></span>
<span class="line"><span>port    10    3    in0    in</span></span>
<span class="line"><span>port    11    3    out    out</span></span>
<span class="line"><span>port    12    4    in_$000    in</span></span>
<span class="line"><span>port    13    4    out    out</span></span>
<span class="line"><span>port    14    4    sel    in</span></span>
<span class="line"><span>port    15    4    in_$001    in</span></span>
<span class="line"><span>port    16    5    clk    in</span></span>
<span class="line"><span>port    17    5    out    out</span></span>
<span class="line"><span>port    18    5    en    in</span></span>
<span class="line"><span>port    19    5    in_    in</span></span>
<span class="line"><span>port    20    6    sel    in</span></span>
<span class="line"><span>port    21    6    in_$001    in</span></span>
<span class="line"><span>port    22    6    in_$002    in</span></span>
<span class="line"><span>port    23    6    out    out</span></span>
<span class="line"><span>port    24    6    in_$000    in</span></span>
<span class="line"><span>port    25    7    is_a_lt_b    in</span></span>
<span class="line"><span>port    26    8    b_reg_en    out</span></span>
<span class="line"><span>port    27    9    b_mux_sel    out</span></span>
<span class="line"><span>port    28    10    is_b_zero    in</span></span>
<span class="line"><span>port    29    11    a_mux_sel    out</span></span>
<span class="line"><span>port    30    12    clk    out</span></span>
<span class="line"><span>port    31    13    resp_msg    in</span></span>
<span class="line"><span>port    32    14    req_msg_b    out</span></span>
<span class="line"><span>port    33    15    req_msg_a    out</span></span>
<span class="line"><span>port    34    16    a_reg_en    out</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#       id      proto   name   type</span></span>
<span class="line"><span>node    0    0    b_zero    default</span></span>
<span class="line"><span>node    1    1    a_reg    default</span></span>
<span class="line"><span>node    2    2    a_lt_b    default</span></span>
<span class="line"><span>node    3    3    sub    default</span></span>
<span class="line"><span>node    4    4    b_mux    default</span></span>
<span class="line"><span>node    5    5    b_reg    default</span></span>
<span class="line"><span>node    6    6    a_mux    default</span></span>
<span class="line"><span>node    7    7    is_a_lt_b    east</span></span>
<span class="line"><span>node    8    8    b_reg_en    west</span></span>
<span class="line"><span>node    9    9    b_mux_sel    west</span></span>
<span class="line"><span>node    10    10    is_b_zero    east</span></span>
<span class="line"><span>node    11    11    a_mux_sel    west</span></span>
<span class="line"><span>node    12    12    clk    west</span></span>
<span class="line"><span>node    13    13    resp_msg    east</span></span>
<span class="line"><span>node    14    14    req_msg_b    west</span></span>
<span class="line"><span>node    15    15    req_msg_a    west</span></span>
<span class="line"><span>node    16    16    a_reg_en    west</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#       outnode outpin  innode  inpin  name</span></span>
<span class="line"><span>edge    0    0    10    28 is_b_zero</span></span>
<span class="line"><span>edge    8    26    5    18 b_reg_en</span></span>
<span class="line"><span>edge    9    27    4    14 b_mux_sel</span></span>
<span class="line"><span>edge    4    13    5    19 b_mux$out</span></span>
<span class="line"><span>edge    3    11    6    21 resp_msg</span></span>
<span class="line"><span>edge    3    11    13    31 resp_msg</span></span>
<span class="line"><span>edge    11    29    6    20 a_mux_sel</span></span>
<span class="line"><span>edge    6    23    1    5 a_mux$out</span></span>
<span class="line"><span>edge    12    30    1    2 clk</span></span>
<span class="line"><span>edge    12    30    5    16 clk</span></span>
<span class="line"><span>edge    2    6    7    25 is_a_lt_b</span></span>
<span class="line"><span>edge    1    3    2    8 a_reg$out</span></span>
<span class="line"><span>edge    1    3    3    10 a_reg$out</span></span>
<span class="line"><span>edge    1    3    4    12 a_reg$out</span></span>
<span class="line"><span>edge    5    17    0    1 b_reg$out</span></span>
<span class="line"><span>edge    5    17    2    7 b_reg$out</span></span>
<span class="line"><span>edge    5    17    3    9 b_reg$out</span></span>
<span class="line"><span>edge    5    17    6    22 b_reg$out</span></span>
<span class="line"><span>edge    15    33    6    24 req_msg_a</span></span>
<span class="line"><span>edge    14    32    4    15 req_msg_b</span></span>
<span class="line"><span>edge    16    34    1    4 a_reg_en</span></span></code></pre></div></details>`,8)]))}const m=s(l,[["render",i]]);export{u as __pageData,m as default};
